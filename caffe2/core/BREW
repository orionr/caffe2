cc_headers(
  name = "core_headers",
  srcs = Glob(["*.h"]),
)

cc_library(
  name = "core",
  srcs = [
      "blob_serialization.cc",
      "db.cc",
      "flags.cc",
      "init.cc",
      "logging.cc",
      "net.cc",
      "operator.cc",
      "workspace.cc",
  ],
  deps = [
    ":core_headers",
    "//caffe2/proto:caffe2_proto",
    "//caffe2/utils:proto_utils",
    "//caffe2/utils:simple_queue",
    "//third_party:glog",
  ],
  whole_archive = True,
)

cc_library(
  name = "core_gpu",
  srcs = [
    "blob_serialization_gpu.cc",
    "common_gpu.cc",
    "cuda_memorypool_gpu.cc",
  ],
  hdrs = [
    "common_gpu.h",
    "context_gpu.h",
    "cuda_memorypool_gpu.h",
  ],
  deps = [
    ":core",
    "//third_party/cnmem:cnmem",
    "//third_party:cuda",
  ],
  whole_archive = True,
)

cc_library(
  name = "core_cudnn",
  srcs = [
    "common_cudnn.cc",
  ],
  hdrs = [
    "common_cudnn.h",
  ],
  deps = [
      ":core",
      "//third_party:cudnn",
  ],
  whole_archive = True,
)

cc_test(
  name = "core_test",
  srcs = [
      "blob_test.cc",
      "context_test.cc",
      "init_test.cc",
      "operator_test.cc",
      "parallel_net_test.cc",
      "registry_test.cc",
      "timer_test.cc",
      "typeid_test.cc",
      "workspace_test.cc",
  ],
  deps = [
      ":core",
      "//third_party:gtest",
      "//caffe2/test:caffe2_gtest_main",
  ],
)

cc_test(
  name = "core_gpu_test",
  srcs = [
      "blob_gpu_test.cc",
  ],
  deps = [
      ":core_gpu",
      "//third_party:gtest",
      "//caffe2/test:caffe2_gtest_main",
  ],
)

# cuda_memorypool_gpu_test has to be run independently because the setup and
# teardown of the memory pool operations.
cc_test(
  name = "cuda_memorypool_gpu_test",
  srcs = [
      "cuda_memorypool_gpu_test.cc",
  ],
  deps = [
      ":core_gpu",
      "//third_party:gtest",
      "//caffe2/test:caffe2_gtest_main",
  ],
)
