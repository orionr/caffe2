cc_headers(
  name = "gflags_namespace_header",
  srcs = [
    "gflags_namespace.h",
  ],
)

cc_binary(
  name = "convert_caffe_image_db",
  srcs = [
      "convert_caffe_image_db.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe/proto:caffe_proto",
      "//caffe2/db:db",
      "//caffe2/proto:caffe2_proto",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
  ],
)

cc_binary(
  name = "convert_db",
  srcs = [
      "convert_db.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2/db:db",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
  ],
)

cc_binary(
  name = "convert_encoded_to_raw_leveldb",
  srcs = [
      "convert_encoded_to_raw_leveldb.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2/core:core",
      "//caffe2/proto:caffe2_proto",
      "//third_party/leveldb:leveldb",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
      "//third_party/opencv:opencv_core",
      "//third_party/opencv:opencv_highgui",
      "//third_party/opencv:opencv_imgproc",
  ],
)

cc_binary(
  name = "db_throughput",
  srcs = [
      "db_throughput.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2/db:db",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
      "//third_party/google:profiler",
  ],
)

cc_binary(
  name = "make_cifar_db",
  srcs = [
      "make_cifar_db.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2/db:db",
      "//caffe2/proto:caffe2_proto",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
  ],
)

cc_binary(
  name = "make_image_db",
  srcs = [
      "make_image_db.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2/db:db",
      "//caffe2/proto:caffe2_proto",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
      "//third_party/opencv:opencv_core",
      "//third_party/opencv:opencv_highgui",
      "//third_party/opencv:opencv_imgproc",
  ],
)

cc_binary(
  name = "make_mnist_db",
  srcs = [
      "make_mnist_db.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2/db:db",
      "//caffe2/proto:caffe2_proto",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
  ],
)

cc_binary(
  name = "print_registered_core_operators",
  srcs = [
      "print_registered_core_operators.cc",
  ],
  deps = [
      "//caffe2/core:core",
      "//caffe2:all_available_ops",
      "//caffe2/db:db",
  ],
)

cc_binary(
  name = "run_client",
  srcs = [
      "run_client.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2/core:core",
      "//caffe2:all_available_ops",
      "//caffe2/db:db",
      "//caffe2/utils:proto_utils",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
  ],
)

cc_binary(
  name = "run_plan",
  srcs = [
      "run_plan.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2:all_available_ops",
      "//caffe2/core:core",
      "//caffe2/db:db",
      "//caffe2/utils:proto_utils",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
  ],
)

cc_binary(
  name = "run_plan_mpi",
  srcs = [
      "run_plan_mpi.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2:all_available_ops",
      "//caffe2/core:core",
      "//caffe2/db:db",
      "//caffe2/utils:proto_utils",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
  ],
  external_libs = Env.MPI_LIBS,
)

cc_binary(
  name = "inspect_gpus",
  srcs = [
      "inspect_gpus.cc",
  ],
  deps = [
      "//caffe2/core:core_gpu",
      "//third_party/glog:glog",
  ],
)

cc_binary(
  name = "split_db",
  srcs = [
      "split_db.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2/db:db",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
  ],
)

cc_binary(
  name = "zmq_feeder",
  srcs = [
      "zmq_feeder.cc",
  ],
  deps = [
      ":gflags_namespace_header",
      "//caffe2/db:db",
      "//caffe2/utils:zmq_hpp",
      "//third_party/gflags:gflags",
      "//third_party/glog:glog",
      "//third_party/libzmq:libzmq",
  ],
)
