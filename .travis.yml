dist: trusty
sudo: required
language: cpp

compiler: gcc
language: cpp
matrix:
  include:
   # - os: linux
   #   compiler: gcc
   #   addons:
   #     apt:
   #       sources: ['ubuntu-toolchain-r-test']
   #       packages: ['g++-4.8']
   #   env: COMPILER=g++-4.8

   # - os: linux
   #   compiler: gcc
   #   addons:
   #     apt:
   #       sources: ['ubuntu-toolchain-r-test']
   #       packages: ['g++-4.9']
   #   env: COMPILER=g++-4.9
   #
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5']
      env: COMPILER=g++-5

install:
  - sudo apt-get install libprotobuf-dev protobuf-compiler libatlas-base-dev libgoogle-glog-dev libgtest-dev liblmdb-dev libleveldb-dev libsnappy-dev python-dev python-pip libiomp-dev libopencv-dev nvidia-cuda-toolkit libpthread-stubs0-dev cmake
  - pip install numpy
  #- curl --retry 10 --retry-max-time 120 -L "https://launchpad.net/gcc-arm-embedded/5.0/5-2016-q2-update/+download/gcc-arm-none-eabi-5_4-2016q2-20160622-linux.tar.bz2" | tar xfj -
  #- export PATH=$PWD/gcc-arm-none-eabi-5_4-2016q2/bin:$PATH
  - wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_8.0.44-1_amd64.deb
  - sudo dpkg -i cuda-repo-ubuntu1404_8.0.44-1_amd64.deb
  - sudo apt-get update
  - sudo apt-get install cuda

script:
  - mkdir build && cd build && export CXX=$COMPILER && cmake .. -DCMAKE_VERBOSE_MAKEFILE=ON && make

# safelist
branches:
  only:
    - master
