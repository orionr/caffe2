dist: trusty
sudo: required
language: cpp
compiler: gcc
matrix:
  include:
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.8
    env: COMPILER=g++-4.8
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
    env: COMPILER=g++-4.9
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-5
    env: COMPILER=g++-5
install:
- sudo apt-get install libprotobuf-dev protobuf-compiler libatlas-base-dev libgoogle-glog-dev
  libgtest-dev liblmdb-dev libleveldb-dev libsnappy-dev python-dev python-pip libiomp-dev
  libopencv-dev libpthread-stubs0-dev cmake
- pip install numpy
- wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_8.0.44-1_amd64.deb   
- sudo dpkg -i cuda-repo-ubuntu1404_8.0.44-1_amd64.deb
- sudo apt-get update
- sudo apt-get install cuda

script:
- mkdir build
- cd build
- export CXX=$COMPILER && ${DEPS_DIR}/cmake3.3.1/bin/cmake .. -DCMAKE_VERBOSE_MAKEFILE=ON
  && make CXX=$COMPILER
branches:
  only:
  - master
before_install:
# https://github.com/NVIDIA/nvidia-docker/blob/master/ubuntu-16.04/cuda/8.0/devel/cudnn5/Dockerfile#L11-L16
- CUDNN_DOWNLOAD_SUM=a87cb2df2e5e7cc0a05e266734e679ee1a2fadad6f06af82a76ed81a23b102c8 &&
  CUDNN_URL="http://developer.download.nvidia.com/compute/redist/cudnn/v5.1/cudnn-8.0-linux-x64-v5.1.tgz" &&
  travis_retry curl -fsSL ${CUDNN_URL} -O &&
  echo "$CUDNN_DOWNLOAD_SUM  cudnn-8.0-linux-x64-v5.1.tgz" | sha256sum -c --strict - &&
  sudo tar -xzf cudnn-8.0-linux-x64-v5.1.tgz -C /usr/local &&
  rm cudnn-8.0-linux-x64-v5.1.tgz &&
  sudo ldconfig
